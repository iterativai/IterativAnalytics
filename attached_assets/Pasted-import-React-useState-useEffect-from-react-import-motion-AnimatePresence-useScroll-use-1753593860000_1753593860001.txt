import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence, useScroll, useTransform } from 'framer-motion';
import { 
  BarChart3, 
  Users, 
  Package, 
  ArrowRight, 
  CheckCircle,
  Clock,
  Sparkles,
  Globe,
  TrendingUp,
  Star,
  ChevronDown,
  Play,
  Menu,
  X,
  Shield,
  Zap,
  Target
} from 'lucide-react';

// Enhanced UI Components
const Card = ({ children, className = "", ...props }) => (
  <div 
    className={`bg-white/5 backdrop-blur-xl border border-white/10 rounded-2xl ${className}`} 
    {...props}
  >
    {children}
  </div>
);

const Button = ({ children, variant = "primary", size = "md", className = "", disabled = false, ...props }) => {
  const baseClasses = "inline-flex items-center justify-center font-semibold transition-all duration-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed";
  
  const variants = {
    primary: "bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 shadow-lg hover:shadow-xl transform hover:scale-105",
    secondary: "bg-white/10 text-white border border-white/20 hover:bg-white/20 backdrop-blur-xl",
    ghost: "text-white hover:bg-white/10",
    outline: "border-2 border-white/30 text-white hover:bg-white/10 backdrop-blur-xl"
  };
  
  const sizes = {
    sm: "px-4 py-2 text-sm",
    md: "px-6 py-3 text-base",
    lg: "px-8 py-4 text-lg"
  };
  
  return (
    <button 
      className={`${baseClasses} ${variants[variant]} ${sizes[size]} ${className}`}
      disabled={disabled}
      {...props}
    >
      {children}
    </button>
  );
};

const Badge = ({ children, variant = "default", className = "" }) => {
  const variants = {
    default: "bg-blue-500/20 text-blue-300 border-blue-500/30",
    success: "bg-green-500/20 text-green-300 border-green-500/30",
    warning: "bg-amber-500/20 text-amber-300 border-amber-500/30",
    outline: "border border-white/20 text-white/70"
  };
  
  return (
    <span className={`inline-flex items-center px-3 py-1 rounded-full text-xs font-medium border ${variants[variant]} ${className}`}>
      {children}
    </span>
  );
};

// Enhanced Mobile Navigation
const MobileNav = ({ isOpen, onClose }) => (
  <AnimatePresence>
    {isOpen && (
      <>
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="fixed inset-0 bg-black/50 backdrop-blur-sm z-40"
          onClick={onClose}
        />
        <motion.div
          initial={{ x: "100%" }}
          animate={{ x: 0 }}
          exit={{ x: "100%" }}
          transition={{ type: "spring", damping: 30, stiffness: 300 }}
          className="fixed top-0 right-0 h-full w-80 bg-slate-900/95 backdrop-blur-xl border-l border-white/10 z-50 p-6"
        >
          <div className="flex justify-end mb-8">
            <Button variant="ghost" size="sm" onClick={onClose}>
              <X className="h-6 w-6" />
            </Button>
          </div>
          <nav className="space-y-6">
            {['Features', 'Pricing', 'About', 'Contact'].map((item) => (
              <motion.a
                key={item}
                href={`#${item.toLowerCase()}`}
                className="block text-xl font-medium text-white hover:text-blue-300 transition-colors"
                whileHover={{ x: 10 }}
                onClick={onClose}
              >
                {item}
              </motion.a>
            ))}
            <div className="pt-6 border-t border-white/10">
              <Button variant="primary" className="w-full mb-3">
                Get Started
              </Button>
              <Button variant="outline" className="w-full">
                Sign In
              </Button>
            </div>
          </nav>
        </motion.div>
      </>
    )}
  </AnimatePresence>
);

// Enhanced Navigation Bar
const EnhancedNavbar = () => {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  
  useEffect(() => {
    const handleScroll = () => setIsScrolled(window.scrollY > 20);
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);
  
  return (
    <>
      <motion.nav
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        className={`fixed top-0 left-0 right-0 z-30 transition-all duration-300 ${
          isScrolled 
            ? 'bg-slate-900/80 backdrop-blur-xl border-b border-white/10' 
            : 'bg-transparent'
        }`}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <motion.div 
              className="flex items-center space-x-3"
              whileHover={{ scale: 1.05 }}
            >
              <div className="bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl p-2">
                <BarChart3 className="h-6 w-6 text-white" />
              </div>
              <span className="text-xl font-bold text-white">Iterativ</span>
            </motion.div>
            
            <div className="hidden md:flex items-center space-x-8">
              {['Features', 'Pricing', 'About', 'Contact'].map((item) => (
                <motion.a
                  key={item}
                  href={`#${item.toLowerCase()}`}
                  className="text-white/80 hover:text-white transition-colors font-medium"
                  whileHover={{ scale: 1.05 }}
                >
                  {item}
                </motion.a>
              ))}
            </div>
            
            <div className="hidden md:flex items-center space-x-4">
              <Button variant="ghost" size="sm">Sign In</Button>
              <Button variant="primary" size="sm">Get Started</Button>
            </div>
            
            <div className="md:hidden">
              <Button 
                variant="ghost" 
                size="sm"
                onClick={() => setIsMobileMenuOpen(true)}
              >
                <Menu className="h-6 w-6" />
              </Button>
            </div>
          </div>
        </div>
      </motion.nav>
      
      <MobileNav 
        isOpen={isMobileMenuOpen} 
        onClose={() => setIsMobileMenuOpen(false)} 
      />
    </>
  );
};

// Enhanced Module Card with better interactions
const ModuleCard = ({ module, isSelected, onSelect, index }) => (
  <motion.div
    initial={{ opacity: 0, y: 50 }}
    animate={{ opacity: 1, y: 0 }}
    transition={{ duration: 0.5, delay: index * 0.1 }}
    whileHover={{ y: -5, scale: 1.02 }}
    whileTap={{ scale: 0.98 }}
  >
    <Card 
      className={`
        cursor-pointer transition-all duration-300 p-6 h-full
        ${isSelected ? 'ring-2 ring-blue-400 bg-white/10' : 'hover:bg-white/10'}
        ${module.status === 'coming-soon' ? 'opacity-75' : ''}
      `}
      onClick={() => onSelect(module.id)}
    >
      <div className="flex items-center justify-between mb-4">
        <motion.div 
          className={`p-3 rounded-xl bg-gradient-to-br ${module.gradient}`}
          whileHover={{ rotate: 10, scale: 1.1 }}
        >
          <module.icon className="h-6 w-6 text-white" />
        </motion.div>
        <Badge 
          variant={module.status === 'available' ? 'success' : 'warning'}
          className="animate-pulse"
        >
          {module.status === 'available' ? (
            <>
              <CheckCircle className="w-3 h-3 mr-1" />
              Available
            </>
          ) : (
            <>
              <Clock className="w-3 h-3 mr-1" />
              Coming Soon
            </>
          )}
        </Badge>
      </div>
      
      <h3 className="text-white text-xl font-bold mb-2">{module.name}</h3>
      <p className="text-blue-200 text-sm font-medium mb-3">{module.tagline}</p>
      <p className="text-slate-400 text-sm mb-4 leading-relaxed">{module.description}</p>
      
      <div className="space-y-3">
        <p className="text-xs font-semibold text-slate-300 uppercase tracking-wide">
          Perfect for:
        </p>
        <div className="flex flex-wrap gap-1">
          {module.bestFor.map((item, idx) => (
            <Badge key={idx} variant="outline" className="text-xs">
              {item}
            </Badge>
          ))}
        </div>
      </div>
      
      <motion.div 
        className="mt-6 pt-4 border-t border-white/10"
        initial={{ opacity: 0 }}
        animate={{ opacity: isSelected ? 1 : 0 }}
        transition={{ duration: 0.2 }}
      >
        <Button 
          variant="primary" 
          size="sm" 
          className="w-full"
          disabled={module.status === 'coming-soon'}
        >
          {module.status === 'available' ? 'Explore Module' : 'Join Waitlist'}
          <ArrowRight className="ml-2 h-4 w-4" />
        </Button>
      </motion.div>
    </Card>
  </motion.div>
);

// Enhanced Stats Display
const StatCard = ({ stat, index }) => (
  <motion.div
    initial={{ opacity: 0, scale: 0.8 }}
    animate={{ opacity: 1, scale: 1 }}
    transition={{ duration: 0.5, delay: index * 0.1 }}
    whileHover={{ scale: 1.05 }}
  >
    <Card className="p-6 text-center group hover:bg-white/10 transition-all duration-300">
      <motion.div
        initial={{ scale: 0 }}
        animate={{ scale: 1 }}
        transition={{ delay: 0.5 + index * 0.1, type: "spring" }}
        className="mb-4"
      >
        <stat.icon className="h-8 w-8 text-blue-400 mx-auto group-hover:text-blue-300 transition-colors" />
      </motion.div>
      <motion.div 
        className="text-3xl font-bold text-white mb-2"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.7 + index * 0.1 }}
      >
        {stat.value}
      </motion.div>
      <div className="text-slate-300 group-hover:text-slate-200 transition-colors">
        {stat.label}
      </div>
    </Card>
  </motion.div>
);

// Enhanced Hero Section with improved animations
const EnhancedHeroSection = () => {
  const { scrollY } = useScroll();
  const y = useTransform(scrollY, [0, 500], [0, 150]);
  const opacity = useTransform(scrollY, [0, 300], [1, 0]);
  
  const [selectedModule, setSelectedModule] = useState(null);
  const [showDemo, setShowDemo] = useState(false);

  const modules = [
    {
      id: 'ventures',
      name: 'Iterativ Ventures',
      tagline: 'AI-Powered Venture Intelligence',
      description: 'Comprehensive startup evaluation, business plan analysis, and investor readiness scoring powered by African market expertise.',
      icon: BarChart3,
      status: 'available',
      gradient: 'from-blue-500 to-purple-600',
      bestFor: ['Startup Founders', 'Accelerators', 'Early-stage VCs'],
      features: ['AI Business Plan Analysis', 'Investor Readiness Scoring', 'Market Assessment']
    },
    {
      id: 'xchange',
      name: 'Iterativ Xchange',
      tagline: 'Connect Startups with Capital',
      description: 'Intelligent investor-startup matching platform facilitating transparent deal flow and due diligence across African markets.',
      icon: Users,
      status: 'available',
      gradient: 'from-purple-500 to-pink-600',
      bestFor: ['Investors', 'VCs', 'Angel Networks'],
      features: ['Smart Matching', 'Due Diligence', 'Deal Flow Management']
    },
    {
      id: 'sourcing',
      name: 'Iterativ Sourcing',
      tagline: 'Smart Talent & Supplier Discovery',
      description: 'Advanced procurement and talent acquisition platform connecting enterprises with verified African suppliers and professionals.',
      icon: Package,
      status: 'coming-soon',
      gradient: 'from-green-500 to-emerald-600',
      bestFor: ['Enterprises', 'Procurement Teams', 'HR Departments'],
      features: ['Supplier Intelligence', 'Talent Matching', 'Performance Analytics']
    }
  ];

  const stats = [
    { icon: Users, value: "10K+", label: "Startups Analyzed" },
    { icon: TrendingUp, value: "$500M+", label: "Investment Facilitated" },
    { icon: Globe, value: "25+", label: "African Countries" },
    { icon: Star, value: "4.9", label: "User Rating" }
  ];

  return (
    <section className="relative min-h-screen flex items-center justify-center overflow-hidden">
      {/* Enhanced Background */}
      <div className="absolute inset-0">
        <div className="absolute inset-0 bg-gradient-to-br from-slate-900 via-blue-900 to-purple-900" />
        <motion.div 
          style={{ y }}
          className="absolute inset-0 opacity-20"
        >
          <div className="absolute inset-0" style={{
            backgroundImage: `radial-gradient(circle at 25% 25%, rgba(59, 130, 246, 0.3) 0%, transparent 50%),
                             radial-gradient(circle at 75% 75%, rgba(147, 51, 234, 0.3) 0%, transparent 50%)`,
          }} />
        </motion.div>
        <div className="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%23ffffff" fill-opacity="0.1"%3E%3Ccircle cx="30" cy="30" r="1"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-20" />
      </div>

      <motion.div style={{ opacity }} className="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
        {/* Main Headline with enhanced typography */}
        <div className="text-center mb-16">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="mb-8"
          >
            <motion.div 
              className="flex items-center justify-center mb-6"
              whileHover={{ scale: 1.1, rotate: 5 }}
            >
              <div className="bg-gradient-to-br from-blue-500 to-purple-600 rounded-2xl p-4 shadow-2xl">
                <BarChart3 className="h-10 w-10 text-white" />
                <motion.div 
                  className="absolute inset-0 bg-gradient-to-br from-blue-400 to-purple-500 rounded-2xl opacity-50"
                  animate={{ scale: [1, 1.2, 1] }}
                  transition={{ duration: 2, repeat: Infinity }}
                />
              </div>
            </motion.div>
            
            <motion.h1 
              className="text-5xl md:text-7xl font-bold mb-6 leading-tight"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              <span className="bg-gradient-to-r from-white via-blue-100 to-purple-100 bg-clip-text text-transparent">
                The Complete
              </span>
              <br />
              <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent">
                African Startup
              </span>
              <br />
              <span className="bg-gradient-to-r from-white via-blue-100 to-purple-100 bg-clip-text text-transparent">
                Ecosystem Platform
              </span>
            </motion.h1>
            
            <motion.p 
              className="text-xl md:text-2xl text-slate-300 max-w-4xl mx-auto leading-relaxed"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
            >
              Three powerful solutions. One unified vision.{' '}
              <span className="text-blue-300 font-semibold">
                Empowering founders, investors, and enterprises
              </span>{' '}
              across Africa with AI-driven insights and opportunities.
            </motion.p>
          </motion.div>

          {/* Enhanced CTA Section */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8, delay: 0.6 }}
            className="flex flex-col sm:flex-row gap-4 justify-center mb-16"
          >
            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
              <Button
                size="lg"
                className="group text-lg px-8 py-4 rounded-xl shadow-2xl"
                onClick={() => setShowDemo(true)}
              >
                <Sparkles className="mr-2 h-5 w-5 group-hover:animate-spin" />
                Explore Platform
                <ArrowRight className="ml-2 h-5 w-5 group-hover:translate-x-1 transition-transform" />
              </Button>
            </motion.div>
            
            <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
              <Button
                size="lg"
                variant="outline"
                className="group text-lg px-8 py-4 rounded-xl"
              >
                <Play className="mr-2 h-5 w-5 group-hover:scale-110 transition-transform" />
                Watch Demo
              </Button>
            </motion.div>
          </motion.div>
        </div>

        {/* Enhanced Module Selector */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.8 }}
          className="mb-16"
        >
          <div className="text-center mb-8">
            <h2 className="text-3xl font-bold text-white mb-4">
              Choose Your Path to Success
            </h2>
            <p className="text-slate-300 text-lg max-w-2xl mx-auto">
              Discover the perfect solution for your journey in the African startup ecosystem
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            {modules.map((module, index) => (
              <ModuleCard
                key={module.id}
                module={module}
                isSelected={selectedModule === module.id}
                onSelect={setSelectedModule}
                index={index}
              />
            ))}
          </div>
        </motion.div>

        {/* Enhanced Stats Section */}
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 1.0 }}
          className="grid grid-cols-2 md:grid-cols-4 gap-6"
        >
          {stats.map((stat, index) => (
            <StatCard key={index} stat={stat} index={index} />
          ))}
        </motion.div>
      </motion.div>
    </section>
  );
};

// Main App Component
const EnhancedIterativApp = () => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-blue-900 to-slate-900">
      <EnhancedNavbar />
      <EnhancedHeroSection />
      
      {/* Additional sections would go here */}
      <section className="py-20 px-4">
        <div className="max-w-7xl mx-auto text-center">
          <motion.div
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h2 className="text-4xl font-bold text-white mb-6">
              Why Choose Iterativ Analytics?
            </h2>
            <div className="grid md:grid-cols-3 gap-8 mt-12">
              {[
                {
                  icon: Shield,
                  title: "Enterprise Security",
                  description: "Bank-grade security with Azure cloud infrastructure and compliance with African data protection laws."
                },
                {
                  icon: Zap,
                  title: "Lightning Fast",
                  description: "AI-powered analysis delivers insights in seconds, not days. Get instant feedback on your business plans."
                },
                {
                  icon: Target,
                  title: "African-Focused",
                  description: "Purpose-built for African markets with local expertise, regulations, and market dynamics."
                }
              ].map((feature, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  whileHover={{ scale: 1.05 }}
                  viewport={{ once: true }}
                >
                  <Card className="p-8 h-full text-center hover:bg-white/10 transition-all duration-300">
                    <motion.div
                      whileHover={{ rotate: 10, scale: 1.1 }}
                      className="mb-6"
                    >
                      <feature.icon className="h-12 w-12 text-blue-400 mx-auto" />
                    </motion.div>
                    <h3 className="text-xl font-bold text-white mb-4">{feature.title}</h3>
                    <p className="text-slate-300 leading-relaxed">{feature.description}</p>
                  </Card>
                </motion.div>
              ))}
            </div>
          </motion.div>
        </div>
      </section>
    </div>
  );
};

export default EnhancedIterativApp;